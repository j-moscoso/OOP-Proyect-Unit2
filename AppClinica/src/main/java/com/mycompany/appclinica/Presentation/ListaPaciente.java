/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.appclinica.Presentation;

import com.mycompany.appclinica.Models.Cita;
import com.mycompany.appclinica.Models.Paciente;
import com.mycompany.appclinica.Services.CitaService;
import com.mycompany.appclinica.Services.MedicoService;
import com.mycompany.appclinica.Services.PacienteService;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Interfaz gráfica para gestionar la lista de pacientes.
 * Permite buscar pacientes por cédula o nombre, crear, editar, eliminar
 * y visualizar las citas asociadas a un paciente.
 * Trabaja con servicios para interacción con datos.
 * 
 * @author Juan Moscoso y Slleider Rojas
 */
public class ListaPaciente extends javax.swing.JInternalFrame {
    private PacienteService pacienteService;
    private MedicoService medicoService;
    private CitaService citaService;
    /**
     * Constructor que inicializa la ventana con los servicios necesarios.
     * 
     * @param pacienteService Servicio de pacientes
     * @param medicoService Servicio de médicos
     * @param citaService Servicio de citas
     */
    public ListaPaciente(PacienteService pacienteService, MedicoService medicoService, CitaService citaService) {
        this.pacienteService = pacienteService;
        this.medicoService = medicoService;
        this.citaService = citaService;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        labelMedicos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDatosMedicos = new javax.swing.JTable();
        buttonCrear = new javax.swing.JButton();
        buttonBuscar = new javax.swing.JButton();
        buttonRefresacar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        textFieldBuscar = new javax.swing.JTextField();
        buttonCrear2 = new javax.swing.JButton();
        buttonBuscar2 = new javax.swing.JButton();
        buttonRefresacar2 = new javax.swing.JButton();
        buttonVerCitas = new javax.swing.JButton();
        buttonEditar2 = new javax.swing.JButton();
        textFieldBuscar2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDatosPaciente = new javax.swing.JTable();
        buttonEliminar2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelPaciente = new javax.swing.JLabel();
        jButtonSalir = new javax.swing.JButton();

        labelMedicos.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelMedicos.setText("Médicos");

        tableDatosMedicos.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        tableDatosMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombre", "Apellido", "Teléfono", "Especialidad"
            }
        ));
        jScrollPane1.setViewportView(tableDatosMedicos);

        buttonCrear.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonCrear.setText("Crear");
        buttonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCrearActionPerformed(evt);
            }
        });

        buttonBuscar.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonBuscar.setText("Buscar");
        buttonBuscar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        buttonRefresacar.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonRefresacar.setText("Refrescar");
        buttonRefresacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefresacarActionPerformed(evt);
            }
        });

        buttonEliminar.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonEditar.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonEditar.setText("Editar");

        textFieldBuscar.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        textFieldBuscar.setText("Buscar");
        textFieldBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                            .addComponent(buttonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(buttonRefresacar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                            .addComponent(buttonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                            .addComponent(labelMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMedicos)
                    .addComponent(buttonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonRefresacar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(buttonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        buttonCrear2.setBackground(new java.awt.Color(252, 252, 252));
        buttonCrear2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        buttonCrear2.setForeground(new java.awt.Color(46, 71, 86));
        buttonCrear2.setText("Crear");
        buttonCrear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCrear2ActionPerformed(evt);
            }
        });

        buttonBuscar2.setBackground(new java.awt.Color(252, 252, 252));
        buttonBuscar2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        buttonBuscar2.setForeground(new java.awt.Color(46, 71, 86));
        buttonBuscar2.setText("Buscar");
        buttonBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscar2ActionPerformed(evt);
            }
        });

        buttonRefresacar2.setBackground(new java.awt.Color(252, 252, 252));
        buttonRefresacar2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        buttonRefresacar2.setForeground(new java.awt.Color(46, 71, 86));
        buttonRefresacar2.setText("Refrescar");
        buttonRefresacar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefresacar2ActionPerformed(evt);
            }
        });

        buttonVerCitas.setBackground(new java.awt.Color(252, 252, 252));
        buttonVerCitas.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonVerCitas.setForeground(new java.awt.Color(46, 71, 86));
        buttonVerCitas.setText("Ver Citas");
        buttonVerCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVerCitasActionPerformed(evt);
            }
        });

        buttonEditar2.setBackground(new java.awt.Color(252, 252, 252));
        buttonEditar2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonEditar2.setForeground(new java.awt.Color(46, 71, 86));
        buttonEditar2.setText("Editar");
        buttonEditar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditar2ActionPerformed(evt);
            }
        });

        textFieldBuscar2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        textFieldBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldBuscar2ActionPerformed(evt);
            }
        });

        tableDatosPaciente.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        tableDatosPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombre", "Apellido", "Teléfono", "Fecha de Nacimiento"
            }
        ));
        jScrollPane2.setViewportView(tableDatosPaciente);

        buttonEliminar2.setBackground(new java.awt.Color(255, 51, 51));
        buttonEliminar2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        buttonEliminar2.setForeground(new java.awt.Color(255, 255, 255));
        buttonEliminar2.setText("Eliminar");
        buttonEliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminar2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(46, 71, 86));
        jLabel1.setText("Ingrese la cédula:");

        jPanel1.setBackground(new java.awt.Color(30, 107, 117));

        labelPaciente.setBackground(new java.awt.Color(255, 255, 255));
        labelPaciente.setFont(new java.awt.Font("Microsoft Tai Le", 1, 36)); // NOI18N
        labelPaciente.setForeground(new java.awt.Color(255, 255, 255));
        labelPaciente.setText("Paciente");

        jButtonSalir.setBackground(new java.awt.Color(255, 51, 51));
        jButtonSalir.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 18)); // NOI18N
        jButtonSalir.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSalir.setText("x");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelPaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSalir)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(buttonEditar2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(buttonEliminar2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(buttonVerCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textFieldBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(buttonBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonRefresacar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonCrear2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonCrear2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonRefresacar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonBuscar2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonEditar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonVerCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonEliminar2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void buttonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCrearActionPerformed
        
    }//GEN-LAST:event_buttonCrearActionPerformed

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void buttonRefresacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefresacarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRefresacarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void textFieldBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldBuscarActionPerformed
    /**
     * Acción para abrir el formulario para crear un nuevo paciente.
     * Centra el formulario en la ventana padre.
     * 
     * @param evt evento de acción
     */
    private void buttonCrear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCrear2ActionPerformed
        FormularioPacientes form = new FormularioPacientes(pacienteService, null);
        getParent().add(form); // Abrir en el desktopPane
        form.setVisible(true);
        
        int x = (getParent().getWidth() - form.getWidth()) / 2;
        int y = (getParent().getHeight() - form.getHeight()) / 2;
        form.setLocation(x, y);
    }//GEN-LAST:event_buttonCrear2ActionPerformed
    /**
     * Busca pacientes por cédula si el texto es numérico, o por nombre en otro caso.
     * Actualiza la tabla mostrando los resultados encontrados.
     * 
     * @param evt evento de acción
     */
    private void buttonBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscar2ActionPerformed
        String texto = textFieldBuscar2.getText().trim();
        List<Paciente> resultados;

        if (texto.matches("\\d+")) {
            // Si es solo números, buscar por cédula
            Optional<Paciente> p = pacienteService.buscarPorCedula(texto);
            resultados = new ArrayList<>();
            if (p.isPresent()) {
                resultados.add(p.get());
            }
        } else {
            // Sino buscar por nombre
            resultados = pacienteService.buscarPorNombre(texto);
        }

        DefaultTableModel model = (DefaultTableModel) tableDatosPaciente.getModel();
        model.setRowCount(0);

        for (Paciente p : resultados) {
            model.addRow(new Object[]{
                p.getCedula(),
                p.getNombre(),
                p.getApellido(),
                p.getTelefono(),
                p.getFechaNacimiento()
            });
        }
    }//GEN-LAST:event_buttonBuscar2ActionPerformed
    /**
     * Refresca la tabla para mostrar todos los pacientes registrados.
     * 
     * @param evt evento de acción
     */
    private void buttonRefresacar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefresacar2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableDatosPaciente.getModel();
        model.setRowCount(0);

        List<Paciente> todosPacientes = pacienteService.listarTodos();

        for (Paciente p : todosPacientes) {
            model.addRow(new Object[]{
                p.getCedula(),
                p.getNombre(),
                p.getApellido(),
                p.getTelefono(),
                p.getFechaNacimiento()
            });
        }
    }//GEN-LAST:event_buttonRefresacar2ActionPerformed
    /**
     * Permite ver las citas del paciente seleccionado.
     * Abre la ventana ListaCitas mostrando solo las citas del paciente.
     * Pide selección previa y muestra mensaje si no se selecciona paciente.
     * 
     * @param evt evento de acción
     */
    private void buttonVerCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVerCitasActionPerformed
        int fila = tableDatosPaciente.getSelectedRow();
        if (fila != -1) {
            String cedula = tableDatosPaciente.getValueAt(fila, 0).toString();
            ListaCitas form = new ListaCitas(citaService, medicoService, pacienteService); 
            this.getParent().add(form);
            form.setVisible(true);
            List<Cita> citasPaciente = citaService.buscarPorPaciente(cedula);
            form.mostrarCitas(citasPaciente);  // Debe ser público
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un paciente para ver sus citas.");
        }
    }//GEN-LAST:event_buttonVerCitasActionPerformed

    private void textFieldBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldBuscar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldBuscar2ActionPerformed
    /**
     * Elimina el paciente seleccionado, muestra confirmación y refresca tabla.
     * 
     * @param evt evento de acción
     */
    private void buttonEliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminar2ActionPerformed
        int fila = tableDatosPaciente.getSelectedRow();
        if (fila != -1) {
            String cedula = (String) tableDatosPaciente.getValueAt(fila, 0);
            pacienteService.eliminarPaciente(cedula);
            JOptionPane.showMessageDialog(this, "Paciente eliminado");
            buttonRefresacar2ActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un paciente para eliminar");
        }
    }//GEN-LAST:event_buttonEliminar2ActionPerformed
    /**
     * Cierra la ventana lista de pacientes.
     * 
     * @param evt evento de acción
     */
    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed
    /**
     * Abre el formulario para editar el paciente seleccionado.
     * Pide selección previa y muestra mensaje si no se selecciona paciente.
     * 
     * @param evt evento de acción
     */
    private void buttonEditar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditar2ActionPerformed
        int fila = tableDatosPaciente.getSelectedRow();
        if (fila != -1) {
            String cedula = (String) tableDatosPaciente.getValueAt(fila, 0);
            Optional<Paciente> p = pacienteService.buscarPorCedula(cedula);
            if (p.isPresent()) {
                FormularioPacientes formulario = new FormularioPacientes(pacienteService, p.get());
                getParent().add(formulario);
                formulario.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un paciente para editar");
        }
    }//GEN-LAST:event_buttonEditar2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonBuscar2;
    private javax.swing.JButton buttonCrear;
    private javax.swing.JButton buttonCrear2;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonEditar2;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonEliminar2;
    private javax.swing.JButton buttonRefresacar;
    private javax.swing.JButton buttonRefresacar2;
    private javax.swing.JButton buttonVerCitas;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelMedicos;
    private javax.swing.JLabel labelPaciente;
    private javax.swing.JTable tableDatosMedicos;
    private javax.swing.JTable tableDatosPaciente;
    private javax.swing.JTextField textFieldBuscar;
    private javax.swing.JTextField textFieldBuscar2;
    // End of variables declaration//GEN-END:variables
}
